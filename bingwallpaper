#!/usr/bin/env bash
# author: Whizzzkid (me@nishantarora.in)
set -euo pipefail
IFS="$(printf '\n\t')"

# Base URL.
bing="http://www.bing.com"

# API end point.
api="/HPImageArchive.aspx?"

# Response Format (json|xml).
format="&format=js"

# For day (0=current; 1=yesterday... so on).
day="&idx=0"

# Market for image.
market="&mkt=en-US"

# API Constant (fetch how many).
const="&n=1"

# Image extension.
extn=".jpg"

# Size.
size="1920x1200"

# Collection Path.
path="$HOME/Pictures/Bing/"

########################################################################
#### DO NOT EDIT BELOW THIS LINE #######################################
########################################################################

# Make it run just once (useful to run as a cron)
run_once=false
while getopts "1" opt; do
  case $opt in
    1 )
      run_once=true
      ;;
    \? )
      echo "Invalid option! usage: \"$0 -1\", to run once and exit"
      exit 1
      ;;
  esac
done

# Required Image Uri.
reqImg="$bing$api$format$day$market$const"
echo "request: $reqImg"
while  true
do

  # Logging.
  echo "Pinging Bing API..."

  # Fetching API response.
  apiResp=$(curl -s "$reqImg")
  if [[ -z "$apiResp" ]]; then
    echo "No valid API respone"
    exit 1
  fi

  reqImgURL=$bing$(echo $apiResp | jq -r ".images[0].urlbase" )"_"$size$extn

  # Checking if reqImgURL exists.
  if ! wget --quiet --spider $reqImgURL; then
    reqImgURL=$bing$(echo "$apiResp" | jq -r ".images[0].url")
  fi

  # Logging.
  echo "Bing Image of the day: $reqImgURL"

  # Getting Image Name.
  imgName=${reqImgURL##*/}

  # Create Path Dir.
  mkdir -p "$path"

  # Saving Image to collection.
  curl -s -o "$path$imgName" "$reqImgURL"

  # Logging.
  echo "Saving image to $path$imgName"

  : "${XDG_CURRENT_DESKTOP:=}"
  if [[ "$XDG_CURRENT_DESKTOP" = "XFCE" ]]
  then
    xres=($(echo $(xfconf-query --channel xfce4-desktop --list | grep last-image)))
    for x in "${xres[@]}"
    do
      xfconf-query --channel xfce4-desktop --property $x --set "$path$imgName"
    done
  # Set the wallpaper for unity, gnome3, cinnamon.
  elif gsettings set org.gnome.desktop.background picture-uri "file://$path$imgName"; then
    # Set the view to zoom,
    gsettings set org.gnome.desktop.background picture-options "zoom"
  else
    echo "$XDG_CURRENT_DESKTOP not supported."
    break
  fi

  echo "New wallpaper set successfully for $XDG_CURRENT_DESKTOP."

  # If -1 option was passed just run once
  if [ $run_once == true ];then
    break
  fi

  # Re-checks for updates every 3 hours.
  sleep 10800
done
