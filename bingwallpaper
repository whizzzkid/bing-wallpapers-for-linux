#!/bin/bash
# author: Whizzzkid (me@nishantarora.in)

# Base URL.
bing="http://www.bing.com"

# API end point.
api="/HPImageArchive.aspx?"

# Response Format (json|xml).
format="&format=js"

# For day (0=current; 1=yesterday... so on).
day="&idx=0"


# Market for image.
# To override the default, define BING_MARKET when calling the script.
# https://docs.microsoft.com/en-us/bing/search-apis/bing-image-search/reference/market-codes
BING_MARKET_LIST="es-AR en-AU de-AT nl-BE fr-BE pt-BR en-CA fr-CA es-CL da-DK \
fi-FI fr-FR de-DE zh-HK en-IN en-ID it-IT ja-JP ko-KR en-MY es-MX nl-NL en-NZ \
no-NO zh-CN pl-PL en-PH ru-RU en-ZA es-ES sv-SE fr-CH de-CH zh-TW tr-TR en-GB \
en-US es-US"
# Let Bing pick the market, by default
BING_DEFAULT_MARKET=""
if [ -z "$BING_MARKET" ] || [ -z "$(echo "$BING_MARKET_LIST" | tr ' ' '\n' | \
grep -Fx "$BING_MARKET")" ]; then
  if [ ! -z "$BING_MARKET" ]; then
    echo "$BING_MARKET is not a valid selection for market, using default \
$BING_DEFAULT_MARKET. The list of valid markets is $BING_MARKET_LIST"
  fi
  # Don't send market if default is not set
  if [ ! -z "$BING_DEFAULT_MARKET" ]; then
    market="&mkt=$BING_DEFAULT_MARKET"
  fi
else
  market="&mkt=$BING_MARKET"
fi

# API Constant (fetch how many).
const="&n=1"

# Image extension.
extn=".jpg"

# Image size.
# To override the default, define BING_WALLPAPER_SIZE when calling the script.
BING_WALLPAPER_SIZE_LIST="1920x1080 1920x1200"
BING_WALLPAPER_SIZE_DEFAULT="1920x1080"
if [ -z "$BING_WALLPAPER_SIZE" ] || [ -z "$(echo "$BING_WALLPAPER_SIZE_LIST" | \
tr ' ' '\n' | grep -Fx "$BING_WALLPAPER_SIZE")" ]; then
  size="$BING_WALLPAPER_SIZE_DEFAULT"
else
  size="$BING_WALLPAPER_SIZE"
fi

# Collection Path.
path="$HOME/Pictures/Bing/"

# Make it run just once (useful to run as a cron)
run_once=false
while getopts "1" opt; do
  case $opt in
    1 )
      run_once=true
      ;;
    \? )
      echo "Invalid option! usage: \"$0 -1\", to run once and exit"
      exit 1
      ;;
  esac
done

########################################################################
#### DO NOT EDIT BELOW THIS LINE #######################################
########################################################################

# Required Image Uri.
reqImg=$bing$api$format$day$market$const

while [ 1 ]
do

  # Logging.
  echo "Pinging Bing API at $(date)"

  # Fetching API response.
  apiResp=$(curl -s $reqImg)
  if [ $? -gt 0 ]; then
    echo "Ping failed!"
    exit 1
  fi

  # Default image URL in case the required is not available.
  defImgURL=$bing$(echo $apiResp | grep -oP "url\":\"[^\"]*" | cut -d "\"" -f 3)

  # Req image url (raw).
  reqImgURL=$bing$(echo $apiResp | grep -oP "urlbase\":\"[^\"]*" | cut -d "\"" -f 3)"_"$size$extn

  # Image copyright.
  copyright=$(echo $apiResp | grep -oP "copyright\":\"[^\"]*" | cut -d "\"" -f 3)

  # Checking if reqImgURL exists.
  if ! wget --quiet --spider --max-redirect 0 $reqImgURL; then
    reqImgURL=$defImgURL
  fi

  # Logging.
  echo "Bing Image of the day: $reqImgURL"

  # Getting Image Name.
  imgName=${reqImgURL##*/}

  # Create Path Dir.
  mkdir -p $path

  # If the Image is not found in the collection or it has a zero bytes size,
  # then save it and apply it to the desktop.
  if [ ! -s $path$imgName ]
  then
    curl -L -s -o $path$imgName $reqImgURL

    # Writing copyright for new Image file.
    echo "$copyright" > $path${imgName/%.jpg/.txt}

    # Logging.
    echo "Image was saved to $path$imgName"
  fi

  if [ "$XDG_CURRENT_DESKTOP" = "XFCE" ]
  then
    xres=($(echo $(xfconf-query --channel xfce4-desktop --list | grep last-image)))
    for x in "${xres[@]}"
    do
      xfconf-query --channel xfce4-desktop --property $x --set $path$imgName
    done
  elif [ "$XDG_CURRENT_DESKTOP" = "i3" ]
  then
    feh --bg-scale $path$imgName
  elif [ "$XDG_CURRENT_DESKTOP" = "MATE" ]
  then
    gsettings set org.mate.background picture-filename $path$imgName
  # Set the wallpaper for unity, gnome3, cinnamon.
  elif gsettings set org.gnome.desktop.background picture-uri "file://$path$imgName"; then
    #Logging
    # Set the view to zoom,
    gsettings set org.gnome.desktop.background picture-options "zoom"
  else
    echo "$XDG_CURRENT_DESKTOP not supported."
    break
  fi

  echo "New wallpaper set successfully for $XDG_CURRENT_DESKTOP."

  # If -1 option was passed just run once
  if [ $run_once == true ];then
    break
  fi

  # Re-checks for updates every 6 hours.
  sleep 6h
done
